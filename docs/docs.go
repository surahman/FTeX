// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Saad Ur Rahman",
            "url": "https://www.linkedin.com/in/saad-ur-rahman/",
            "email": "saad.ur.rahman@gmail.com"
        },
        "license": {
            "name": "GPL-3.0",
            "url": "https://opensource.org/licenses/GPL-3.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/crypto/exchange/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Purchase or sell a Cryptocurrency to/from a Fiat currency accounts. The Offer ID must be valid and have expired.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto fiat currency cryptocurrency exchange convert offer transfer execute"
                ],
                "summary": "Transfer funds between Fiat and Crypto accounts using a valid Offer ID.",
                "operationId": "exchangeCrypto",
                "parameters": [
                    {
                        "description": "the two currency codes and amount to be converted",
                        "name": "offerID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a message to confirm the conversion of funds",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "408": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/crypto/info/balance/{ticker}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the balance for a specific Cryptocurrency. The currency ticker must be supplied as a query parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto cryptocurrency currency balance"
                ],
                "summary": "Retrieve balance for a specific Cryptocurrency.",
                "operationId": "balanceCurrencyCrypto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the Cryptocurrency ticker to retrieve the balance for",
                        "name": "ticker",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the details for a specific currency account",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/crypto/info/transaction/{transactionID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the transaction details for a specific transactionID. The transaction ID must be supplied as a query parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto cryptocurrency transactionID transaction details"
                ],
                "summary": "Retrieve transaction details for a specific transactionID.",
                "operationId": "txDetailsCrypto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the transaction ID to retrieve the details for",
                        "name": "transactionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the transaction details for a specific transaction ID",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/crypto/offer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Purchase or sell a Fiat currency using a Cryptocurrency. The amount must be a positive number with at most two or eight decimal places for Fiat and Cryptocurrencies respectively. Both currency accounts must be opened beforehand.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat crypto cryptocurrency currency sell sale offer"
                ],
                "summary": "Purchase or sell a Cryptocurrency and using a Fiat currency.",
                "operationId": "sellOfferCrypto",
                "parameters": [
                    {
                        "description": "the Cryptocurrency ticker, Fiat currency code, and amount to be converted in the source currency",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPCryptoOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a message to confirm the purchase rate for a Fiat or Cryptocurrency",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/crypto/open": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a Cryptocurrency account for a specified ticker, to be provided as the currency in the request, for a user by creating a row in the Crypto Accounts table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto cryptocurrency currency open"
                ],
                "summary": "Open a Cryptocurrency account.",
                "operationId": "openCrypto",
                "parameters": [
                    {
                        "description": "cryptocurrency ticker for new account",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPOpenCurrencyAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "a message to confirm the creation of an account",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/deposit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deposit funds into a Fiat account in a specific currency for a user. The amount must be a positive number with at most two decimal places.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat currency deposit"
                ],
                "summary": "Deposit funds into a Fiat account.",
                "operationId": "depositFiat",
                "parameters": [
                    {
                        "description": "currency code and amount to be deposited",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPDepositCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a message to confirm the deposit of funds",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/exchange/offer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exchange quote for Fiat funds between two Fiat currencies. The amount must be a positive number with at most two decimal places and both currency accounts must be opened.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat currency exchange convert offer transfer"
                ],
                "summary": "Exchange quote for Fiat funds between two Fiat currencies.",
                "operationId": "exchangeOfferFiat",
                "parameters": [
                    {
                        "description": "the two currency code and amount to be converted",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPExchangeOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a message to confirm the conversion rate for a currency",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/exchange/transfer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Transfer Fiat funds between two Fiat currencies. The Offer ID must be valid and have expired.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat currency exchange convert offer transfer execute"
                ],
                "summary": "Transfer Fiat funds between two Fiat currencies using a valid Offer ID.",
                "operationId": "exchangeTransferFiat",
                "parameters": [
                    {
                        "description": "the two currency codes and amount to be converted",
                        "name": "offerID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a message to confirm the conversion of funds",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "408": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/info/balance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all the currency balances for a specific client. The initial request will only contain (optionally) the page size. Subsequent requests will require a cursors to the next page that will be returned in a previous call to the endpoint. The user may choose to change the page size in any sequence of calls.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat currency balance"
                ],
                "summary": "Retrieve all the currency balances for a specific client.",
                "operationId": "balanceCurrencyFiatPaginated",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The page cursor into the query results records.",
                        "name": "pageCursor",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The number of records to retrieve on this page.",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a message to with a page of account balances for the client's accounts",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/info/balance/{ticker}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the balance for a specific Fiat currency. The currency ticker must be supplied as a query parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat currency balance"
                ],
                "summary": "Retrieve balance for a specific Fiat currency.",
                "operationId": "balanceCurrencyFiat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the currency ticker to retrieve the balance for",
                        "name": "ticker",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the details for a specific currency account",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/info/transaction/all/{currencyCode}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all the transaction details for currency a specific client during the specified month. The initial request will contain (optionally) the page size and, month, year, and timezone (option, defaults to UTC). Subsequent requests will require a cursors to the next page that will be returned in the previous call to the endpoint. The user may choose to change the page size in any sequence of calls.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat currency transaction"
                ],
                "summary": "Retrieve all the transactions for a currency account for a specific client during a specified month.",
                "operationId": "txDetailsCurrencyFiatPaginated",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the currency code to retrieve the transaction details for.",
                        "name": "currencyCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The page cursor into the query results records.",
                        "name": "pageCursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The timezone for the month in question.",
                        "name": "timezone",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The month for which transaction records are being requested.",
                        "name": "month",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The year for the month for which transaction records are being requested.",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The number of records to retrieve on this page.",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a message to confirm the conversion of funds",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "416": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/info/transaction/{transactionID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the transaction details for a specific transactionID. The transaction ID must be supplied as a query parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat transactionID transaction details"
                ],
                "summary": "Retrieve transaction details for a specific transactionID.",
                "operationId": "txDetailsCurrencyFiat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the transaction ID to retrieve the details for",
                        "name": "transactionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the transaction details for a specific transaction ID",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/fiat/open": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a Fiat account for a specific currency for a user by creating a row in the Fiat Accounts table.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fiat currency open"
                ],
                "summary": "Open a Fiat account.",
                "operationId": "openFiat",
                "parameters": [
                    {
                        "description": "currency code for new account",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPOpenCurrencyAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "a message to confirm the creation of an account",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "This endpoint is exposed to allow load balancers etc. to check the health of the service.\nThis is achieved by the service pinging the data tier comprised of Postgres and Redis.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health healthcheck liveness"
                ],
                "summary": "Healthcheck for service liveness.",
                "operationId": "healthcheck",
                "responses": {
                    "200": {
                        "description": "message: healthy",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "503": {
                        "description": "error message with any available details",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a user stored in the database by marking it as deleted. The user must supply their login credentials as well as complete the following confirmation message:\n\"I understand the consequences, delete my user account USERNAME HERE\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user users delete security"
                ],
                "summary": "Deletes a user. The user must supply their credentials as well as a confirmation message.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "description": "The request payload for deleting an account",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HTTPDeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "message with a confirmation of a deleted user account",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Logs in a user by validating credentials and returning a JWT.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user users login security"
                ],
                "summary": "Login a user.",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "description": "Username and password to login with",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLoginCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a valid JWT token for the new account",
                        "schema": {
                            "$ref": "#/definitions/models.JWTAuthResponse"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "409": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/refresh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Refreshes a user's JWT by validating it and then issuing a fresh JWT with an extended validity time. JWT must be expiring in under 60 seconds.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user users login refresh security"
                ],
                "summary": "Refresh a user's JWT by extending its expiration time.",
                "operationId": "loginRefresh",
                "responses": {
                    "200": {
                        "description": "A new valid JWT",
                        "schema": {
                            "$ref": "#/definitions/models.JWTAuthResponse"
                        }
                    },
                    "403": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "510": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Creates a user account by inserting credentials into the database. A hashed password is stored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user users register security"
                ],
                "summary": "Register a user.",
                "operationId": "registerUser",
                "parameters": [
                    {
                        "description": "Username, password, first and last name, email address of user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "a valid JWT token for the new account",
                        "schema": {
                            "$ref": "#/definitions/models.JWTAuthResponse"
                        }
                    },
                    "400": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "error message with any available details in payload",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.HTTPCryptoOfferRequest": {
            "type": "object",
            "required": [
                "isPurchase",
                "request"
            ],
            "properties": {
                "isPurchase": {
                    "type": "boolean"
                },
                "request": {
                    "$ref": "#/definitions/models.HTTPExchangeOfferRequest"
                }
            }
        },
        "models.HTTPDeleteUserRequest": {
            "type": "object",
            "required": [
                "confirmation",
                "password",
                "username"
            ],
            "properties": {
                "confirmation": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                }
            }
        },
        "models.HTTPDepositCurrencyRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "models.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "payload": {}
            }
        },
        "models.HTTPExchangeOfferRequest": {
            "type": "object",
            "required": [
                "destinationCurrency",
                "sourceAmount",
                "sourceCurrency"
            ],
            "properties": {
                "destinationCurrency": {
                    "type": "string"
                },
                "sourceAmount": {
                    "type": "number"
                },
                "sourceCurrency": {
                    "type": "string"
                }
            }
        },
        "models.HTTPOpenCurrencyAccountRequest": {
            "type": "object",
            "required": [
                "currency"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                }
            }
        },
        "models.HTTPSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "payload": {}
            }
        },
        "models.HTTPTransferRequest": {
            "type": "object",
            "required": [
                "offerId"
            ],
            "properties": {
                "offerId": {
                    "type": "string"
                }
            }
        },
        "models.JWTAuthResponse": {
            "type": "object",
            "required": [
                "expires",
                "threshold",
                "token"
            ],
            "properties": {
                "expires": {
                    "description": "Expiration time as unix time stamp. Strictly used by client to gauge when to refresh the token.",
                    "type": "integer"
                },
                "threshold": {
                    "description": "The window in seconds before expiration during which the token can be refreshed.",
                    "type": "integer"
                },
                "token": {
                    "description": "JWT string sent to and validated by the server.",
                    "type": "string"
                }
            }
        },
        "models.UserAccount": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 64
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 64
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                }
            }
        },
        "models.UserLoginCredentials": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:33723",
	BasePath:         "/api/rest/v1",
	Schemes:          []string{"http"},
	Title:            "FTeX, Inc. (Formerly Crypto-Bro's Bank, Inc.)",
	Description:      "FTeX Fiat and Cryptocurrency Banking API.\nBank, buy, and sell Fiat and Cryptocurrencies. Prices for all currencies are retrieved from real-time quote providers.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

basePath: /api/rest/v1
consumes:
- application/json
definitions:
  models.HTTPDeleteUserRequest:
    properties:
      confirmation:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - confirmation
    - password
    - username
    type: object
  models.HTTPDepositCurrencyRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
    required:
    - amount
    - currency
    type: object
  models.HTTPError:
    properties:
      message:
        type: string
      payload: {}
    type: object
  models.HTTPFiatExchangeOfferRequest:
    properties:
      destinationCurrency:
        type: string
      sourceAmount:
        type: number
      sourceCurrency:
        type: string
    required:
    - destinationCurrency
    - sourceAmount
    - sourceCurrency
    type: object
  models.HTTPFiatTransferRequest:
    properties:
      offerId:
        type: string
    required:
    - offerId
    type: object
  models.HTTPOpenCurrencyAccountRequest:
    properties:
      currency:
        type: string
    required:
    - currency
    type: object
  models.HTTPSuccess:
    properties:
      message:
        type: string
      payload: {}
    type: object
  models.JWTAuthResponse:
    properties:
      expires:
        description: Expiration time as unix time stamp. Strictly used by client to
          gauge when to refresh the token.
        type: integer
      threshold:
        description: The window in seconds before expiration during which the token
          can be refreshed.
        type: integer
      token:
        description: JWT string sent to and validated by the server.
        type: string
    required:
    - expires
    - threshold
    - token
    type: object
  models.UserAccount:
    properties:
      email:
        maxLength: 64
        type: string
      firstName:
        maxLength: 64
        type: string
      lastName:
        maxLength: 64
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - username
    type: object
  models.UserLoginCredentials:
    properties:
      password:
        maxLength: 32
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - password
    - username
    type: object
host: localhost:33723
info:
  contact:
    email: saad.ur.rahman@gmail.com
    name: Saad Ur Rahman
    url: https://www.linkedin.com/in/saad-ur-rahman/
  description: |-
    FTeX Fiat and Cryptocurrency Banking API.
    Bank, buy, and sell Fiat and Cryptocurrencies. Prices for all currencies are retrieved from real-time quote providers.
  license:
    name: GPL-3.0
    url: https://opensource.org/licenses/GPL-3.0
  title: FTeX, Inc. (Formerly Crypto-Bro's Bank, Inc.)
  version: 1.0.0
paths:
  /fiat/deposit:
    post:
      consumes:
      - application/json
      description: Deposit funds into a Fiat account in a specific currency for a
        user. The amount must be a positive number with at most two decimal places.
      operationId: depositFiat
      parameters:
      - description: currency code and amount to be deposited
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.HTTPDepositCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: a message to confirm the deposit of funds
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Deposit funds into a Fiat account.
      tags:
      - fiat currency deposit
  /fiat/exchange/offer:
    post:
      consumes:
      - application/json
      description: Exchange quote for Fiat funds between two Fiat currencies. The
        amount must be a positive number with at most two decimal places and both
        currency accounts must be opened.
      operationId: exchangeOfferFiat
      parameters:
      - description: the two currency code and amount to be converted
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.HTTPFiatExchangeOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: a message to confirm the conversion rate for a currency
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Exchange quote for Fiat funds between two Fiat currencies.
      tags:
      - fiat currency exchange convert offer transfer
  /fiat/exchange/transfer:
    post:
      consumes:
      - application/json
      description: Transfer Fiat funds between two Fiat currencies. The Offer ID must
        be valid and have expired.
      operationId: exchangeTransferFiat
      parameters:
      - description: the two currency code and amount to be converted
        in: body
        name: offerID
        required: true
        schema:
          $ref: '#/definitions/models.HTTPFiatTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: a message to confirm the conversion of funds
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "408":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Transfer Fiat funds between two Fiat currencies using a valid Offer
        ID.
      tags:
      - fiat currency exchange convert offer transfer execute
  /fiat/info/balance:
    get:
      consumes:
      - application/json
      description: Retrieves all the currency balances for a specific client. The
        initial request will only contain (optionally) the page size. Subsequent requests
        will require a cursors to the next page that will be returned in a previous
        call to the endpoint. The user may choose to change the page size in any sequence
        of calls.
      operationId: balanceCurrencyFiatPaginated
      parameters:
      - description: The page cursor into the query results records.
        in: query
        name: pageCursor
        type: string
      - description: The number of records to retrieve on this page.
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: a message to with a page of account balances for the client's
            accounts
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Retrieve all the currency balances for a specific client.
      tags:
      - fiat currency balance
  /fiat/info/balance/{currencyCode}:
    get:
      consumes:
      - application/json
      description: Retrieves the balance for a specific currency. The currency code
        must be supplied as a query parameter.
      operationId: balanceCurrencyFiat
      parameters:
      - description: the currency code to retrieve the balance for
        in: path
        name: currencyCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: the details for a specific currency account
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Retrieve balance for a specific currency.
      tags:
      - fiat currency balance
  /fiat/info/transaction/{transactionID}:
    get:
      consumes:
      - application/json
      description: Retrieves the transaction details for a specific transactionID.
        The transaction ID must be supplied as a query parameter.
      operationId: txDetailsCurrencyFiat
      parameters:
      - description: the transaction ID to retrieve the details for
        in: path
        name: transactionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: the transaction details for a specific transaction ID
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Retrieve transaction details for a specific transactionID.
      tags:
      - fiat transactionID transaction details
  /fiat/info/transaction/all/{currencyCode}/:
    get:
      consumes:
      - application/json
      description: Retrieves all the transaction details for currency a specific client
        during the specified month. The initial request will contain (optionally)
        the page size and, month, year, and timezone (option, defaults to UTC). Subsequent
        requests will require a cursors to the next page that will be returned in
        the previous call to the endpoint. The user may choose to change the page
        size in any sequence of calls.
      operationId: txDetailsCurrencyFiatPaginated
      parameters:
      - description: the currency code to retrieve the transaction details for.
        in: path
        name: currencyCode
        required: true
        type: string
      - description: The page cursor into the query results records.
        in: query
        name: pageCursor
        type: string
      - description: The timezone for the month in question.
        in: query
        name: timezone
        type: string
      - description: The month for which transaction records are being requested.
        in: query
        name: month
        type: integer
      - description: The year for the month for which transaction records are being
          requested.
        in: query
        name: year
        type: integer
      - description: The number of records to retrieve on this page.
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: a message to confirm the conversion of funds
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "416":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Retrieve all the transactions for a currency account for a specific
        client during a specified month.
      tags:
      - fiat currency transaction
  /fiat/open:
    post:
      consumes:
      - application/json
      description: Creates a Fiat account for a specific currency for a user by creating
        a row in the Fiat Accounts table.
      operationId: openFiat
      parameters:
      - description: currency code for new account
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.HTTPOpenCurrencyAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: a message to confirm the creation of an account
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Open a Fiat account.
      tags:
      - fiat currency open
  /health:
    get:
      description: |-
        This endpoint is exposed to allow load balancers etc. to check the health of the service.
        This is achieved by the service pinging the data tier comprised of Postgres and Redis.
      operationId: healthcheck
      produces:
      - application/json
      responses:
        "200":
          description: 'message: healthy'
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "503":
          description: error message with any available details
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Healthcheck for service liveness.
      tags:
      - health healthcheck liveness
  /user/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Deletes a user stored in the database by marking it as deleted. The user must supply their login credentials as well as complete the following confirmation message:
        "I understand the consequences, delete my user account USERNAME HERE"
      operationId: deleteUser
      parameters:
      - description: The request payload for deleting an account
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.HTTPDeleteUserRequest'
      produces:
      - application/json
      responses:
        "204":
          description: message with a confirmation of a deleted user account
          schema:
            $ref: '#/definitions/models.HTTPSuccess'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Deletes a user. The user must supply their credentials as well as a
        confirmation message.
      tags:
      - user users delete security
  /user/login:
    post:
      consumes:
      - application/json
      description: Logs in a user by validating credentials and returning a JWT.
      operationId: loginUser
      parameters:
      - description: Username and password to login with
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: a valid JWT token for the new account
          schema:
            $ref: '#/definitions/models.JWTAuthResponse'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "409":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Login a user.
      tags:
      - user users login security
  /user/refresh:
    post:
      description: Refreshes a user's JWT by validating it and then issuing a fresh
        JWT with an extended validity time. JWT must be expiring in under 60 seconds.
      operationId: loginRefresh
      produces:
      - application/json
      responses:
        "200":
          description: A new valid JWT
          schema:
            $ref: '#/definitions/models.JWTAuthResponse'
        "403":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "510":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Refresh a user's JWT by extending its expiration time.
      tags:
      - user users login refresh security
  /user/register:
    post:
      consumes:
      - application/json
      description: Creates a user account by inserting credentials into the database.
        A hashed password is stored.
      operationId: registerUser
      parameters:
      - description: Username, password, first and last name, email address of user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserAccount'
      produces:
      - application/json
      responses:
        "201":
          description: a valid JWT token for the new account
          schema:
            $ref: '#/definitions/models.JWTAuthResponse'
        "400":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: error message with any available details in payload
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Register a user.
      tags:
      - user users register security
produces:
- application/json
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

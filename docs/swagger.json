{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "FTeX Fiat and Cryptocurrency Banking API.\nBank, buy, and sell Fiat and Cryptocurrencies. Prices for all currencies are\nretrieved from real-time quote providers.",
        "title": "FTeX, Inc. (Formerly Crypto-Bro's Bank, Inc.)",
        "contact": {
            "name": "Saad Ur Rahman",
            "url": "https://www.linkedin.com/in/saad-ur-rahman/",
            "email": "saad.ur.rahman@gmail.com"
        },
        "license": {
            "name": "GPL-3.0",
            "url": "https://opensource.org/licenses/GPL-3.0"
        },
        "version": "1.0.0"
    },
    "host": "localhost:33723",
    "basePath": "/api/rest/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "This endpoint is exposed to allow load balancers etc. to check the health of the service.\nThis is achieved by the service pinging the data tier comprised of Postgres and Redis.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health healthcheck liveness"
                ],
                "summary": "Healthcheck for service liveness.",
                "operationId": "healthcheck",
                "responses": {
                    "200": {
                        "description": "message: healthy",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPSuccess"
                        }
                    },
                    "503": {
                        "description": "error message with any available details",
                        "schema": {
                            "$ref": "#/definitions/models.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "payload": {}
            }
        },
        "models.HTTPSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "payload": {}
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}

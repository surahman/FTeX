package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"errors"

	"github.com/gofrs/uuid"
	"github.com/surahman/FTeX/pkg/common"
	"github.com/surahman/FTeX/pkg/models"
)

// OpenCrypto is the resolver for the openCrypto field.
func (r *mutationResolver) OpenCrypto(ctx context.Context, ticker string) (*models.CryptoOpenAccountResponse, error) {
	var (
		clientID   uuid.UUID
		errMessage string
		err        error
	)

	if clientID, _, err = AuthorizationCheck(ctx, r.auth, r.logger, r.authHeaderKey); err != nil {
		return nil, errors.New("authorization failure")
	}

	if _, errMessage, err = common.HTTPCryptoOpen(r.db, r.logger, clientID, ticker); err != nil {
		return nil, errors.New(errMessage)
	}

	return &models.CryptoOpenAccountResponse{ClientID: clientID.String(), Ticker: ticker}, nil
}
